/**
  * @file
  * Cellular Grid
*/

.container {
  float: none;
  max-width: $grid-cell-max-width;
  margin: auto;
}

/* //// */

/* Grid Cells */

/* /// */

/* Set common attributes. */
#{$cells} {
  @include transition();

  position: relative;
  z-index: 1;
  display: block;
  float: left;

  &.center {
    margin: $grid-cell-margin + unquote("%") auto;
  }

  @if ($grid-cell-margin) {
    margin: $grid-cell-margin + unquote("%");
  }

  @if ($grid-cell-padding) {
    padding: $grid-cell-padding + unquote("%");
  }
}

/* .cell is functionally a row */
.cell {
  @include clear();

  width: 100%;
}

/* Size individual cells & offsets. */
@each $size in $grid-cells {
  $name: round($size);
  .cell-#{$name} {
    @if ($grid-flex == true) {
      flex-basis: $size + unquote("%");
      width: auto;
      max-width: $size + unquote("%");
      margin: auto;
    } @else {
      width: $size - $cell-space + unquote("%");
    }
  }

  @if ($grid-flex == false) {
    .offset-#{$name} {
      margin-left: $size + ($cell-space / 2) + unquote("%");
    }
  }
}

@if ($grid-flex == true) {
  .flex {
    display: flex;
    flex: 1 1 auto;
    flex-flow: row wrap;
    align-content: flex-start;
    align-items: stretch;
    justify-content: space-around;
    &.col {
      flex-direction: column;
    }
    &.row {
      flex-direction: row;
    }
  }
}

@include mediaquery($mediaquery-small) {
  /* Set all cells to single-column */
  #{$cells} {
    width: 100% - $cell-space;

    @if ($grid-flex) {
      flex-basis: 100% - $cell-space;
      max-width: 100% - $cell-space;
    }
  }
  #{$offsets} {
    margin-left: $grid-cell-margin + unquote("%");
  }
}

/* /// */

/* Element positioning classes */

/* /// */
.hidden {
  position: absolute;
  left: -9999px;
}

.clearfix {
  @include clear();
}

.left,
.right,
.center {
  display: block;
}

.left {
  float: left;
}

.right {
  float: right;
}

.center {
  @include clear();

  float: none;
  margin: $grid-cell-margin + unquote("%") auto;
}
